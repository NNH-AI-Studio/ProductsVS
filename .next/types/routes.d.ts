// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/admin" | "/admin/dashboard" | "/admin/login" | "/admin/migrate" | "/ai-battle" | "/ar" | "/category/[category]" | "/comparison/[slug]" | "/contact" | "/en" | "/favorites" | "/privacy-policy" | "/quick-decision" | "/search" | "/terms"
type AppRouteHandlerRoutes = "/api/admin/analytics" | "/api/admin/approve" | "/api/admin/auth" | "/api/admin/pending" | "/api/admin/reject" | "/api/admin/stats" | "/api/analytics" | "/api/battle" | "/api/generate" | "/api/health" | "/api/products" | "/api/products/[slug]" | "/api/rate" | "/api/rate/stats" | "/api/vote" | "/api/vote/stats"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/admin": {}
  "/admin/dashboard": {}
  "/admin/login": {}
  "/admin/migrate": {}
  "/ai-battle": {}
  "/api/admin/analytics": {}
  "/api/admin/approve": {}
  "/api/admin/auth": {}
  "/api/admin/pending": {}
  "/api/admin/reject": {}
  "/api/admin/stats": {}
  "/api/analytics": {}
  "/api/battle": {}
  "/api/generate": {}
  "/api/health": {}
  "/api/products": {}
  "/api/products/[slug]": { "slug": string; }
  "/api/rate": {}
  "/api/rate/stats": {}
  "/api/vote": {}
  "/api/vote/stats": {}
  "/ar": {}
  "/category/[category]": { "category": string; }
  "/comparison/[slug]": { "slug": string; }
  "/contact": {}
  "/en": {}
  "/favorites": {}
  "/privacy-policy": {}
  "/quick-decision": {}
  "/search": {}
  "/terms": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
